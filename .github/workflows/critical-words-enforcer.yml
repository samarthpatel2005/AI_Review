# üö® Critical Words Reporter
# 
# This workflow REPORTS critical words found in comments without failing the PR
# Provides clear feedback and suggestions for improvement
#
# FEATURES:
# - Non-blocking analysis: REPORTS when critical words detected
# - Clear suggestions for fixing issues
# - Detailed analysis of all comments
# - Configurable thresholds and word lists

name: Critical Words Enforcer

on:
  workflow_run:
    workflows: ["Enhanced AI PR Review with File-Based Prompts"]
    types: [completed]
    branches: [ main, master, develop ]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to analyze'
        required: true
        type: string

jobs:
  enforce-critical-words:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    permissions:
      pull-requests: write
      contents: read
      checks: write
      statuses: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Get PR Number from API
      id: pr
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # Manual trigger - use provided PR number
          PR_NUMBER="${{ github.event.inputs.pr_number }}"
          echo "Using manual PR number: $PR_NUMBER"
        else
          # Workflow run trigger - get from API
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.workflow_run.head_sha }}/pulls")
          PR_NUMBER=$(echo "$PR_DATA" | jq -r '.[0].number // empty')
        fi
        
        if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
          echo "No PR found for this commit"
          exit 0
        fi
        echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
        
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
        else
          echo "sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
        fi

    - name: Critical Words Enforcement Check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        PR_NUMBER: ${{ steps.pr.outputs.number }}
        GITHUB_SHA: ${{ steps.pr.outputs.sha }}
      run: |
        echo "üö® Running Critical Words Enforcement Check..."
        echo "PR Number: ${{ steps.pr.outputs.number }}"
        echo "Repository: ${{ github.repository }}"
        echo "SHA: ${{ steps.pr.outputs.sha }}"
        
        python3 scripts/critical_words_enforcer.py
        
        # Check if the script ran successfully
        if [ $? -eq 0 ]; then
          echo "‚úÖ Critical Words Enforcement completed successfully"
        else
          echo "‚ùå Critical Words Enforcement failed"
          exit 1
        fi

    - name: Upload Critical Words Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: critical-words-report-${{ steps.pr.outputs.number }}
        path: |
          critical-words-report.txt
          critical-words-report.json
        retention-days: 30