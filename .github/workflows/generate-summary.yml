name: Generate PR Review Summary

on:
  workflow_run:
    workflows: ["Critical Words Enforcer"]
    types: [completed]
    branches: [ main, master, develop ]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to generate summary for'
        required: true
        type: string

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure') }}
    permissions:
      pull-requests: write
      contents: write
      checks: read
      actions: read

    steps:
    - name: Debug Workflow Run Info
      run: |
        echo "🔍 Workflow Run Debug Info:"
        echo "Event: ${{ github.event_name }}"
        echo "Workflow Run ID: ${{ github.event.workflow_run.id }}"
        echo "Workflow Run Name: ${{ github.event.workflow_run.name }}"
        echo "Workflow Run Conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Head SHA: ${{ github.event.workflow_run.head_sha }}"
        echo "Head Branch: ${{ github.event.workflow_run.head_branch }}"

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Get PR Number from API
      id: pr
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # Manual trigger - use provided PR number
          PR_NUMBER="${{ github.event.inputs.pr_number }}"
          echo "Using manual PR number: $PR_NUMBER"
        else
          # Workflow run trigger - get from API
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.workflow_run.head_sha }}/pulls")
          PR_NUMBER=$(echo "$PR_DATA" | jq -r '.[0].number // empty')
        fi
        
        if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
          echo "No PR found for this commit"
          exit 0
        fi
        echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
        
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
        else
          echo "sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
        fi

    - name: Generate PR Review Summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        PR_NUMBER: ${{ steps.pr.outputs.number }}
        GITHUB_SHA: ${{ steps.pr.outputs.sha }}
      run: |
        echo "📊 Generating PR Review Summary..."
        echo "PR Number: ${{ steps.pr.outputs.number }}"
        echo "Repository: ${{ github.repository }}"
        echo "SHA: ${{ steps.pr.outputs.sha }}"
        
        python3 scripts/generate_pr_summary.py
        
        # Check if the script ran successfully and file was created
        if [ $? -eq 0 ] && [ -f "pr-review-summary.md" ]; then
          echo "✅ PR Review Summary generated successfully"
          echo "📄 Summary file size: $(wc -c < pr-review-summary.md) bytes"
        else
          echo "❌ PR Review Summary generation failed"
          exit 1
        fi

    - name: Upload Summary as Artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: pr-review-summary-${{ steps.pr.outputs.number }}
        path: |
          pr-review-summary.md
        retention-days: 30